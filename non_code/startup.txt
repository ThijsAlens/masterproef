Home automation is a very broud topic, with many possibilities. It can automate very simple things, like automaticially switching a lightswitch when entering a room, or do very complicated tasks like controling the climate in a home. Vele mensen zouden er gebruik van kunnen maken om hun leven makkelijker, goedkoper, aangenamer... te maken. Maar het is niet vanzelfsprekend om een huis helemaal naar je hand te zetten door gebruik te maken van domotica. Je moet namelijk heel hard gemotiveerd zijn om al de mogelijkheden te ontdekken, leren, toepassen... Er zijn veel verschillende protocollen die gebruikt worden door verschillende domotica. Er is geen gecentralizeerde/algemene manier om zo'n wereld op te zetten (buiten home-assistant wat een heel stijle leercurve heeft). Om een huis te automatiseren moet je kunnen programeren, YAML-files begrijpen en kunnen gebruiken en nog veel meer. Kortom, niet iets wat de "gewone" mens kan. Vandaar de inspiratie voor deze masterproef. Hoe zorgt men ervoor dat "gewone" mensen ook gebruik maken van deze technologie? Hoe maak je het met andere woorden gebruiks-vriendelijk.
Het doel van deze masterproef is verschillende gebruiksvriendelijke interfaces, in combinatie met IDP-Z3, tegen elkaar op te zetten om te kijken welke methodes er bestaan en welke de beste is in de context van home automation. Ook zal er een uitgewerkte engine zijn voor de gebruiksvriendelijke-interface die het best blijkt voor dit specifieke domein.

Ik heb ter voorbereiding van de masterproef een labo IDP-Z3 gevolgd tijdens de zomervakantie. In dit labo leerde ik werken met IDP-Z3, meer bepaald FO(.), dat op zijn beurt een extentie is van FO (first order logic). IDP-Z3 is een knowledge-based AI, dit (in tegenstelling tot een generative AI) is een AI waaraan de gebruiker enkele regels geeft, waarna de AI dan mogelijke oplossingen biedt. Bijvoorbeeld een sudoku: 
er zijn 3 regels in sudoko:
	elk nummer mag maar 1 keer voorkomen in een 3x3 vierkant;
	elk nummer mag maar 1 keer voorkomen per verticale;
	elk nummer mag maar 1 keer voorkomen per horizontale;
Wanneer je deze drie regels in FO(.) schrijft en aan IDP-Z3 geeft kan de AI mogelijkheden geven van valide spelletjes sudoku. Maar het kan evengoed checken of een spel wel correct is. Of het kan checken of een situatie mogelijk is en of er nog een valide oplossing is.

Ik las ook reeds wat literatuur over gebruiksvriendelijke user-interfaces. DMN (dissicion model and notation) is een structuur die best gebruikt wordt om applicaties te modelleren die opeenvolgende beslissingen op een makkelijke manier voorsteld. Ook las ik al over een CNL (Controlled natural language) is een manier om code te representeren met normale taal (bijvoorbeeld engels), maar de normale taal is beperkt zodat er geen enkele vorm van ambiguiteit / interpretatie mogelijk is. Op deze manier kan de taal nog steeds omgezet worden naar code. Ook een block-based editor lijkt interessant voor deze toepassing. De verschillende onderdelen van een codeer-taal worden omgezet in blokjes, op deze manier hoeft de gebruiker zich geen zorgen te maken over syntax, want al shet blokje niet past, is het niet mogelijk in de taal. De blokjes maken het ook mogelijk om moeilijke regels toch makkelijk voor te stellen.
