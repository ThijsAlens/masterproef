V1
=====
Home automation is a broad and multifaceted domain, offering a wide range of possibilities. It can automate basic tasks, such as automatically turning on a light when entering a room, as well as complex functions like controlling the climate within a home. Many people could potentially benefit from these systems to simplify their lives, reduce costs, or enhance comfort. However, seamlessly integrating home automation into a home is not straightforward. Het heeft vele uitdagingen waar vaak over wordt gekeken. Zo is het heel moeilijk voor iemand die het niet gewoon is om met technologie bezig te zijn. Het vergt namelijk veel inspanning om alles rond home automation te leren. Je moet namelijk een basis hebben in het programmeren, je moet leren werken met YAML-files, je moet de protocollen leren die de verschillende apparaten gebruiken om te communiceren... Kort gezegd is het niet makkelijk om dit te leren zonder enige ervaring. Het zou zonde zijn moest de technologie rond home-automation enkel bruikbaar zijn voor zij die kunnen programmeren/technische achtergrond hebben. In deze thesis wordt een oplossing gezocht voor dit probleem door gebruik te maken van IDP.
IDP (meerbepaald IDP-Z3) is een reasoning engine die op basis van een FO(.) bescrhijving beslissingen maakt. FO(.) is een extentie van FO (first order logic), het voegd types, partiele functies, inductive definitions en aggregates. Het grote voordeel van het gebruik van IDP-Z3 en FO(.) is dat de kennis gescheiden is van de interpretatie. De gebruiker moet zich dus niet bezig houden met het effectief programmeren van het beslissingsmodel, dit wordt immers gedaan door de AI. De gebruiker moet enkel de regels geven in de IDP-taal. Deze taal is echter niet echt toegankelijk en kan voor complexe regels/situaties snel complex worden. Er moet dus gezocht worden naar een user-friendly manier om de IDP-taal te representeren.
Home assistent is een zeer uitgebreid framework voor home automation. Het kan enorm veel, maar kan heel overwelming zijn voor gebruikers die niet echt "in de buisiness zitten". Het zou goed zijn dat moest deze applicatie geintegreerd zou kunnen worden in home assistent. 

================================================================================================================================================================================================================
TRANSLATION V1
==============
Home automation is a diverse and multifaceted field that offers a wide range of possibilities, from simple tasks such as automatically turning on lights when entering a room, to more complex operations like controlling the climate within a home. These systems have the potential to significantly simplify daily routines, reduce costs, and enhance overall comfort. 
However, integrating home automation seamlessly into an existing household presents numerous challenges that are often overlooked, particularly for individuals who lack experience with technology.

One of the primary obstacles is the steep learning curve required to set up and maintain home automation systems. Users must possess a fundamental understanding of programming, as well as familiarity with specific technical tools such as YAML files and the communication protocols that various devices use to interact with one another. For those without a technical background, this process can be overwhelming and difficult to navigate. It would be unfortunate if the benefits of home automation were only accessible to individuals with programming skills or a technical background.

This thesis aims to address this issue by exploring how Intelligent Decision Procedures (IDP), specifically IDP-Z3, can be leveraged to make home automation more accessible. IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, an extension of first-order logic (FO) that introduces types, partial functions, inductive definitions, and aggregates. The key advantage of using IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This means that the user is not required to program the decision-making model themselves, as this is handled by the AI. Instead, the user only needs to provide the rules in the IDP language.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. Additionally, existing home automation frameworks, such as Home Assistant, while offering extensive functionality, are often overwhelming for users who lack technical expertise. Home Assistant, for example, provides numerous features and possibilities but requires significant technical knowledge to navigate and configure effectively. This complexity can act as a barrier to widespread adoption of home automation technologies. 

================================================================================================================================================================================================================
V2
=====
Home automation is a diverse and multifaceted field that offers a wide range of possibilities, from simple tasks such as automatically turning on lights when entering a room, to more complex operations like controlling the climate within a home. These systems have the potential to significantly simplify daily routines, reduce costs, and enhance overall comfort. Meestal runt zo'n systeem op een server of raspberry pi, in combinatie met home assistent. Home assistent is een applicatie dat vele tools heeft om verschillende apparaten van verschillende merken samen in een app functioneel te krijgen. Het heeft ook een eigen framework waarin de gebruiker zijn/haar huis kan automatiseren. Dit framework is al redelijk gebruiksvriendelijk, maar is beperkt. Zo zijn complexere automatisaties niet mogelijk via de UI en moet de gebruiker alsnog prutsen in een YAML file, niet ideaal. Integrating home automation seamlessly into an existing household komt dus met numerous challenges that are often overlooked, particularly for individuals who lack experience with technology.

One of the primary obstacles is the steep learning curve required to set up and maintain home automation systems. Als users een complexe automatisatie van hun huis zouden willen doen, zullen ze must possess a fundamental understanding of programming, as well as familiarity with specific technical tools such as YAML files and the communication protocols that various devices use to interact with one another. For those without a technical background, this process can be overwhelming and difficult to navigate. It would be unfortunate if the benefits of home automation were only accessible to individuals with programming skills or a technical background.

This thesis aims to address this issue by exploring how Intelligent Decision Procedures (IDP), specifically IDP-Z3, can be leveraged to make home automation more accessible. IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, an extension of first-order logic (FO) that introduces types, partial functions, inductive definitions, and aggregates. The key advantage of using IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This means that the user is not required to program the decision-making model themselves, as this is handled by the AI. Instead, the user only needs to provide the rules in the IDP language.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. Additionally, existing home automation frameworks, such as Home Assistant, while offering extensive functionality, are often overwhelming for users who lack technical expertise. Home Assistant, for example, provides numerous features and possibilities but requires significant technical knowledge to navigate and configure effectively. This complexity can act as a barrier to widespread adoption of home automation technologies. 

===============================================================================================================================================================================================================
TRANSLATION V2
==============
Home automation is a diverse and multifaceted field offering a broad range of possibilities, from simple tasks such as automatically turning on lights upon entering a room, to more advanced operations like regulating home climate. These systems have the potential to significantly streamline daily routines, reduce costs, and improve overall comfort. Typically, such systems run on a server or Raspberry Pi in conjunction with Home Assistant. Home Assistant is an application that integrates various devices from different brands into a single functional app. It also provides a framework through which users can automate their homes. While this framework is relatively user-friendly, it has limitations. More complex automations are not possible through the user interface (UI) and still require users to modify YAML files, which is far from ideal. Thus, seamlessly integrating home automation into an existing household presents numerous challenges, especially for individuals with limited technical expertise.

One of the main challenges is the steep learning curve associated with setting up and maintaining home automation systems. If users wish to implement complex automations within their home, they must have a basic understanding of programming and be familiar with specific technical tools, such as YAML files and communication protocols that enable devices to interact. For those without a technical background, this can be a daunting and difficult process. It would be regrettable if the benefits of home automation were accessible only to those with programming skills or technical expertise.

This thesis seeks to address this issue by investigating how Intelligent Decision Procedures (IDP), specifically IDP-Z3, can be utilized to make home automation more accessible. IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, which is an extension of first-order logic (FO) incorporating types, partial functions, inductive definitions, and aggregates. A key advantage of IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This allows the user to avoid programming the decision-making model themselves, as this is handled by the AI. Instead, the user only needs to provide the rules in the IDP language.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. Moreover, existing home automation frameworks, such as Home Assistant, while offering extensive functionality, are often overwhelming for users who lack technical expertise. For instance, Home Assistant provides a wide array of features and possibilities, but navigating and configuring the system effectively requires significant technical knowledge. This complexity can create barriers to the widespread adoption of home automation technologies.

===============================================================================================================================================================================================================
V3
=====

Home automation is a diverse and multifaceted field offering a broad range of possibilities, from simple tasks such as automatically turning on lights upon entering a room, to more advanced operations like regulating home climate. These systems have the potential to significantly streamline daily routines, reduce costs, and improve overall comfort. Typically, such systems run on a server or Raspberry Pi in conjunction with Home Assistant. Home Assistant is an application that integrates various devices from different brands into a single functional app. It also provides a framework through which users can automate their homes. While this framework is relatively user-friendly, it has limitations. More complex automations are not possible through the user interface (UI) and still require users to modify YAML files, which is far from ideal. Thus, seamlessly integrating home automation into an existing household presents numerous challenges, especially for individuals with limited technical expertise.

One of the main challenges is the steep learning curve associated with setting up and maintaining home automation systems. If users wish to implement complex automations within their home, they must have a basic understanding of programming and be familiar with specific technical tools, such as YAML files and communication protocols that enable devices to interact. For those without a technical background, this can be a daunting and difficult process. It would be regrettable if the benefits of home automation were accessible only to those with programming skills or technical expertise.

This thesis seeks to address this issue by investigating how Intelligent Decision Procedures (IDP), specifically IDP-Z3, can be utilized to make home automation more accessible. IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, which is an extension of first-order logic (FO) incorporating types, partial functions, inductive definitions, and aggregates. A key advantage of IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This allows the user to avoid programming the decision-making model themselves, as this is handled by the AI. Instead, the user only needs to provide the rules in the IDP language.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. Wanneer men te maken krijgt met een grote vocabulary en theory is het moeilijk om het overzicht te behouden en eventuele aanpassingen door te voeren. Een GUI die structuur brengt en een beperktere set van de IDP taal zouden kunnen helpen om IDP toch een valide optie te maken voor home automation. 

===============================================================================================================================================================================================================
TRANSLATION V3
==============
Home automation is a diverse and multifaceted field offering a broad range of possibilities, from simple tasks such as automatically turning on lights upon entering a room, to more advanced operations like regulating home climate. These systems have the potential to significantly streamline daily routines, reduce costs, and improve overall comfort. Typically, such systems run on a server or Raspberry Pi in conjunction with Home Assistant. Home Assistant is an application that integrates various devices from different brands into a single functional app. It also provides a framework through which users can automate their homes. While this framework is relatively user-friendly, it has limitations. More complex automations are not possible through the user interface (UI) and still require users to modify YAML files, which is far from ideal. Thus, seamlessly integrating home automation into an existing household presents numerous challenges, especially for individuals with limited technical expertise.

One of the main challenges is the steep learning curve associated with setting up and maintaining home automation systems. If users wish to implement complex automations within their home, they must have a basic understanding of programming and be familiar with specific technical tools, such as YAML files and communication protocols that enable devices to interact. For those without a technical background, this can be a daunting and difficult process. It would be regrettable if the benefits of home automation were accessible only to those with programming skills or technical expertise.

This thesis seeks to address this issue by investigating how Intelligent Decision Procedures (IDP), specifically IDP-Z3, can be utilized to make home automation more accessible. IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, which is an extension of first-order logic (FO) incorporating types, partial functions, inductive definitions, and aggregates. A key advantage of IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This allows the user to avoid programming the decision-making model themselves, as this is handled by the AI. Instead, the user only needs to provide the rules in the IDP language.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. When users are confronted with a large vocabulary and theory, it can be difficult to maintain an overview and make necessary adjustments. A graphical user interface (GUI) that provides structure, along with a more limited subset of the IDP language, could help make IDP a more viable option for home automation.

===============================================================================================================================================================================================================
V4 (after feedback)
====================
Home automation is a way to automate tasks in a home. These can be simple tasks such as automatically turning on lights upon entering a room, to more advanced operations like regulating home climate. Recently, with the coming of Internet of Things (IoT), lots of devices became "smart" and are therefore capable of automation. This event has the potential to significantly streamline daily routines, reduce costs, and improve overall comfort. Typically, a home automation system runs on a server or Raspberry Pi in conjunction with Home Assistant. Home Assistant is an application that integrates various devices from different brands into a single functional app. It also provides a framework through which users can automate their homes.

IDP-Z3 is a reasoning engine that makes decisions based on a formal FO(.) description, which is an extension of FO incorporating types, partial functions, inductive definitions, and aggregates. A key advantage of IDP-Z3 and FO(.) is the separation of knowledge from its interpretation. This allows the user to avoid programming the decision-making model themselves, as this is handled by the reasoning engine. (? link leggen tss IDP en HA ?)



While Home Assistent is relatively user-friendly, it has limitations. More complex automations are not possible through the user interface (UI) and still require users to modify configuration files, which is far from ideal. Thus, seamlessly integrating home automation into an existing household presents numerous challenges, especially for individuals with limited technical expertise.

One of the main challenges is the steep learning curve associated with setting up and maintaining home automation systems. If users wish to implement complex automations within their home, they must have a basic understanding of programming and be familiar with specific technical tools. For those without a technical background, this can be a daunting and difficult process. It would be unfortunate if the benefits of home automation were accessible only to those with programming skills or technical expertise.

However, the IDP language itself is not particularly user-friendly and can become quite complex, especially when dealing with intricate rules or scenarios. When users are confronted with a large vocabulary and theory, it can be difficult to maintain an overview and make necessary adjustments. It also has a lot of possibilities that are not usefull in the context of home automation



This thesis seeks to address this issue by investigating how IDP, specifically IDP-Z3, can be utilized to make home automation more accessible. Instead of needing to create automations, triggers, and aligning them with each other, the user only needs to describe the desired behavior of the home in the IDP language. A graphical user interface (GUI) that provides structure, along with a more limited subset of the IDP language, could help make IDP a more viable option for home automation.



The objectives of this thesis are:
- Design a user-friendly UI that is most suited for IDP in combination with home automation.
- Deside on a subset of the IDP-language that has all the functionallity needed for home automation.

The primary research question addressed in this thesis is:
How do we design an IDP-Z3 framework that enables end-users to automate their homes in a user-friendly way?
This overarching inquiry is further explored through the following sub-questions:
- What is the optimal user-friendly interface for addressing this problem?
- Which subset of the IDP-language is needed to configure a home?
