vocabulary V {
    type Light
    type State := {On, Off}
    stateOfLight: Light -> State
    brightnessLvl: Light -> Int
    isSomeoneHome: () -> Bool
}

theory T:V {
    !l in Light : ~isSomeoneHome() => stateOfLight(l) = Off .
    !l in Light : (brightnessLvl(l) >= 0) & (brightnessLvl(l) =< 100) & (brightnessLvl(l) % 10 = 0) . 
    !l in Light : stateOfLight(l) = Off <=> (~isSomeoneHome() | (brightnessLvl(l) = 0)) .
    {
        !l in Light : stateOfLight(l) = Off <- brightnessLvl(l) < 0
    }
}

structure S:V {
    Light := {light1, light2, light3, light4} .
}
