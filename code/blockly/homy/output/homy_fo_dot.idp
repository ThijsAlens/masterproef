vocabulary V {
	// DEFAULT NEEDED TYPES AND FUNCTIONS
	type StringDevice := {light_1, light_2, motion_sensor_1, motion_sensor_2, light_3}
	type NumberDevice := {fan_1, temperature_sensor_1}
	type StringState := {light_OFF, light_ON, motion_sensor_ON, motion_sensor_OFF}
	type Area := {home, reading_corner, living_room}
	time: () -> Int


	stringDeviceIsInArea: StringDevice -> Area
	numberDeviceIsInArea: NumberDevice -> Area
	// subArea * superArea -> Bool
	areaIsSubAreaOf: Area * Area -> Bool


	stringDeviceIsInState: StringDevice -> StringState
	numberDeviceIsInState: NumberDevice -> Int
	// GENERATED VOCABULARY


	type lightDevice := {light_1, light_2, light_3} <: StringDevice
	type lightDeviceStates := {light_on, light_off} <: StringState
	type motion_sensorDevice := {motion_sensor_1, motion_sensor_2} <: StringDevice
	type motion_sensorDeviceStates := {motion_sensor_on, motion_sensor_off} <: StringState
	type fanDevice := {fan_1} <: NumberDevice
	type fanDeviceStates := {0..100} <: Int
	type temperature_sensorDevice := {temperature_sensor_1} <: NumberDevice
	type temperature_sensorDeviceStates := {0..50} <: Int
}
theory T : V {
	!dt in lightDevice: ?x in lightDeviceStates: stringDeviceIsInState(dt) = x.
	!dt in motion_sensorDevice: ?x in motion_sensorDeviceStates: stringDeviceIsInState(dt) = x.
	!dt in fanDevice: ?x in fanDeviceStates: numberDeviceIsInState(dt) = x.
	!dt in temperature_sensorDevice: ?x in temperature_sensorDeviceStates: numberDeviceIsInState(dt) = x.
	(    (stringDeviceIsInState(  motion_sensor_1) =   motion_sensor_ON) |   (stringDeviceIsInState(  motion_sensor_2) =   motion_sensor_ON) ) => (  (stringDeviceIsInState(  light_3) =   light_OFF)).
	(  (stringDeviceIsInState(  temperature_sensor_1) =   30)) => (  (stringDeviceIsInState(  fan_1) =   80)).
	(  time() = 8) => (    (stringDeviceIsInState(  light_1) =   light_OFF) &   (stringDeviceIsInState(  light_2) =   light_OFF) ).
}
structure S : V {
	stringDeviceIsInArea := {light_1 -> reading_corner, light_2 -> reading_corner, motion_sensor_1 -> living_room, motion_sensor_2 -> living_room, light_3 -> living_room} .
	numberDeviceIsInArea := {fan_1 -> reading_corner, temperature_sensor_1 -> reading_corner} .
	areaIsSubAreaOf := {(reading_corner, home), (living_room, home)} .
}